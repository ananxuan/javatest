/* 打印命令行参数 */
public class CommandLine{

  public static void main(String args[]){
    for (int i=0; i < args.length; i++){
      System.out.println("args[" + i + "]:" + args[i]);
      }
    }
}


/* 构造函数*/
class MyClass {
  int x;
  MyClass(int i){
    x = i;
  }
}
/*调用构造函数初始化一个对象*/
public class ConsDemo{

  public static void main(String args[]){
    MyClass t1 = new MyClass(10);
    MyClass t2 = new MyClass(20);
    System.out.println(t1.x + " " + t2.x);
  }
}

/*可变参数*/

public class VarargsDemo{

  public static void main(String args[]){
    //调用可变参数
      printMax(34, 3, 3, 2, 56.5);
    printMax(new double[]{1,2,3};
  }
  
  public static void printMax（double...numbers){/*变量类型后要加省略号*/
  if (number.length == 0){
    System.out.println("No argument passed");
    return;
  }
  
  double result = numbers[0];
  
  for (int i = 1; i < numbers.length; i++){
    if (numbers[i] >result){
    result = numbers[i];
    System.out.println("The max value is "+ result);
    }
  }
}
}

/*finalize method*/
public class FinalizationDemo{
  public static void main(String args[]){
    Cake c1 = new Cake(1);
    Cake c2 = new Cake(2);
    Cake c3 = new Cake(3);
    
    c2 = c3 = null;
    System.gc();//调用Java垃圾收集器
  }
}

class Cake extends Object{
  private int id;
  public Cake(int id) {
    this.id = id;
    System.out.println("Cake Object" + id +" is created");
  }
  
  protected void finalize() throws java.lang.Throwable{
    super.finalize();
    System.out.println("Cake Object" + id + " is disposed");
  }
}
    

  
                                      
